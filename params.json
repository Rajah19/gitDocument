{
  "name": "Gitdocument",
  "tagline": "git notes",
  "body": "# Git notes.\r\n\r\n#  Global configuration.\r\n-\tGit config --global user.name “Your name”\r\n-\tGit config –global user.email your email\r\n\r\n-  Initialize => git init , git clone\r\n  \r\n-\tTo add files             => git add .    or   git add <filename> or  git add directory/\r\n-\tTo commit              => git commit –m “”\r\n-\tTo add and commit  => git commit –am “”\r\n-\tTo delete file            =>   git rm <filename>\r\n-\tTo get status             =>   git status\r\n\r\n# Git log\r\n-\tGit help log\r\n-\tView all                    => git log,\r\n-\tView number of log  => git log -n 1\r\n-\tView since                => git log - -since= 2014-05-15\r\n-\tView until                 => git log - -until= 2005-05-25\r\n-\t View by author        => git log - - author=””\r\n-\t Grep by word           => git log - -grep=”hi”\r\n-\t  Get online info        => git log - -oneline\r\n-\t Git show log\r\n\r\n# To rename file  \r\n-\tgit mv oldFilename  newFilename  \r\n-\t git mv oldFilename    directory/newFileName\r\n\r\n\r\n# Different from file and branches \r\n-\tTo get all: Git diff\r\n-\tBase on file: git diff - - base <filename>\r\n                        ** git diff - -color -words <filename>\r\n-\tPreview changes, before merging: git diff <sourcebarnch> <targetbranch>\r\n                      **Git diff –color-words <branchName>.. <branchName>\r\n-\t Find different form stage   :              git diff - - staged \r\n-\tPress q to exit from different. \r\n-\tUse F and B for forward and backward.\r\n\r\n # Changes    \r\n-\tUndo changes in file :  *Git checkout - - <filename> \r\n-\tUndo stage                : git reset HEAD <filename>\r\n-\tAmend commit         : git commit - - amend –m “get the previous commit”\r\n-\tRevert old one           : git checkout 20ea6a53a4f2 - - filename\r\n-\tRevert commit           : git revert sha\r\n\r\n# Branch \r\n-\tCreate branch: git branch nameOfbranch\r\n-\tView Branch:  git branch or git branch –a or git branch –r\r\n-\tSwitch Branch:  git checkout branchName\r\n-\tDelete branch : git branch –d branchName\r\n\r\n# Merge\r\nTo merge branch, you must go main branch, and \r\n-\tGit merge branchName\r\n-\tGit branch - -merged\r\n-\tGit branch - - no-merge\r\n\r\n\r\n# Remote\r\nAdd remote repository\r\n   git remote add origin https://github.com/rajah10/sqlAndMySql.git\r\n\r\n\r\n\r\n# Create a remote branch \r\n\r\n-\tgit remote –u repositoryName localBranch\r\n-\tgit branch –a \r\n-\tgit branch –r => only show remote branch\r\n-\tgit push remoteBanchName\r\n-\tgit fetch nameOfTheRepository or remoteBranchName\r\n-\tgit merge origin/BranchName\r\n\r\n\r\n# To delete remote branch \r\n\r\n-\tgit push origin : branchName\r\n\r\n\r\n\r\n# Clone repository to local machine\r\n\r\n-\tGit clone path\r\n-\tgit remote\r\n-\tgit remote –v  (view repository )\r\n-\tgit remote rm repositoryName  ( remove repository )\r\n\r\n\r\n\r\n# My work Flow\r\n-\tGit checkout master\r\n-\tGit fetch\r\n-\tGit merge origin/master\r\n-\tGit checkout –b newBranchName\r\n-\tGit commit –m “ “\r\n-\tGit fetch\r\n-\tGit push –u origin barnchName\r\n\r\n# Collaborator view\r\n-\tGit checkout master\r\n-\tGit fetch\r\n-\tGit merge origin/master\r\n-\tGit checkout –b branchName origin/branchName\r\n-\tGit log\r\n-\tGit show 84521d\r\n-\tGit commit –am “”\r\n-\tGit fetch\r\n-\tGit push\r\n\r\n \r\n# Again my work\r\n-\tGit fetch\r\n-\tGit log –p branchName..origin/branchName\r\n-\tGit merge origin/branchName\r\n-\tGit checkout master\r\n-\tGit fetch\r\n-\tGit merge origin/master\r\n-\tGit merge branchName\r\n-\tGit push\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}